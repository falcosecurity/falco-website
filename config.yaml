baseURL: /
languageCode: en-us
theme: falco-fresh
disableKinds: ["taxonomy", "taxonomyTerm"]
pygmentsCodefences: true
pygmentsStyle: monokai
defaultContentLanguage: en
enableInlineShortcodes: true

languages:
  en:
    languageName: English
    title: Falco — Cloud-Native Runtime Security
    contentDir: content/en
    params:
      heroText:
        # Main hero title
        title: Cloud-Native Runtime Security
        # Hero subtitle (optional)
        subtitle: Falco, the open source cloud-native runtime security project, is the defacto Kubernetes threat detection engine. Falco detects unexpected application behavior and alerts on threats at runtime.
        # Button text
        buttontext: Get started
      runtime:
        title: Why Runtime Security?
        intro: >-
               Securing Kubernetes requires putting controls in place to detect unexpected behavior that could be malicious. Examples include:
        items:
          - example: Exploits of unpatched and new vulnerabilities
          - example: Insecure configurations
          - example: Leaked or weak credentials
          - example: Insider threats
        closing: Even when processes are in place for vulnerability scanning and implementing pod security and network policies, not every risk will be addressed. You still need mechanisms to confirm these security barriers are effective, help configure them, and provide with a last line of defense when they fail.
      whyfalco:
        title: Why Falco for Runtime Detection?
        subtitle: 
        tiles:
        - title: Strengthen security
          icon: check.png
          text: Create security rules driven by a context-rich and flexible engine to define unexpected application behavior.
        - title: Reduce risk
          icon: box.png
          text: Immediately respond to policy violation alerts by plugging Falco into your current security response workflows and processes.
        - title: Leverage up-to-date rules
          icon: scalable.png
          text: Alert using community-sourced detections of malicious activity and CVE exploits.
      syscalls:
        title: System calls deliver deep visibility
        summary: Falco efficiently leverages Extended Berkeley Packet Filter (eBPF), a secure mechanism, to capture system calls and gain deep visibility. By adding Kubernetes application context and Kubernetes API audit events, teams can understand who did what.
      resources:
        title: Downloads + Resources
        subtitle: Get started today, contribute to the open source project & learn more.
        items:
        - title: Contribute
          text: Jump over to our GitHub page to contribute to our open source ecosystem.
          # Icon (from /images/illustrations/icons/___.svg)
          icon: group.png
          buttonText:  Falco Github
          buttonLink: https://github.com/falcosecurity/falco
        - title: Download
          text: Get started with our Falco installation guide.
          icon: download.png
          buttonText: Falco Install Guide
          buttonLink: /docs/installation
        - title: Documentation
          text: In the official docs, you can find information about [installing Falco](/docs/installation), [configuration options](/docs/configuration), and writing [custom rules](/docs/rules).
          icon: documentation-2.png
          buttonText: Falco Documentation
          buttonLink: /docs
        - title: Connect
          text: Join our Slack team to interact with other users and developers.
          icon: chat.png
          buttonText: Falco Slack
          buttonLink: https://slack.sysdig.com/
      signup:
        title: Join the mailing list
        subtitle: Get involved with the community
        buttonText: Submit
    menu:
      navbar:
      - name: Why Falco?
        url: "/#whyfalco"
        weight: 2
      - name: Get started
        url: "/#resources"
        weight: 3
      - name: Documentation
        url: "/docs"
        weight: 4
      - name: Blog
        url: "/blog"
        weight: 5

  zh:
    languageName: 中文 Chinese
    title: Falco — Cloud-Native Runtime Security
    contentDir: content/zh
    params:
      heroText:
        # Main hero title
        title: Cloud-Native Runtime Security
        # Hero subtitle (optional)
        subtitle: Falco, the open source cloud-native runtime security project, is the defacto Kubernetes threat detection engine. Falco detects unexpected application behavior and alerts on threats at runtime.
        # Button text
        buttontext: Get started
      runtime:
        title: Why Runtime Security?
        intro: >-
               Securing Kubernetes requires putting controls in place to detect unexpected behavior that could be malicious. Examples include:
        items:
          - example: Exploits of unpatched and new vulnerabilities
          - example: Insecure configurations
          - example: Leaked or weak credentials
          - example: Insider threats
        closing: Even when processes are in place for vulnerability scanning and implementing pod security and network policies, not every risk will be addressed. You still need mechanisms to confirm these security barriers are effective, help configure them, and provide with a last line of defense when they fail.
      whyfalco:
        title: Why Falco for Runtime Detection?
        subtitle: 
        tiles:
        - title: Strengthen security
          icon: check.png
          text: Create security rules driven by a context-rich and flexible engine to define unexpected application behavior.
        - title: Reduce risk
          icon: box.png
          text: Immediately respond to policy violation alerts by plugging Falco into your current security response workflows and processes.
        - title: Leverage up-to-date rules
          icon: scalable.png
          text: Alert using community-sourced detections of malicious activity and CVE exploits.
      syscalls:
        title: System calls deliver deep visibility
        summary: Falco efficiently leverages Extended Berkeley Packet Filter (eBPF), a secure mechanism, to capture system calls and gain deep visibility. By adding Kubernetes application context and Kubernetes API audit events, teams can understand who did what.
      resources:
        title: Downloads + Resources
        subtitle: Get started today, contribute to the open source project & learn more.
        items:
        - title: Contribute
          text: Jump over to our GitHub page to contribute to our open source ecosystem.
          # Icon (from /images/illustrations/icons/___.svg)
          icon: group.png
          buttonText:  Falco Github
          buttonLink: https://github.com/falcosecurity/falco
        - title: Download
          text: Get started with our Falco installation guide.
          icon: download.png
          buttonText: Falco Install Guide
          buttonLink: /docs/installation
        - title: Documentation
          text: In the official docs, you can find information about [installing Falco](/docs/installation), [configuration options](/docs/configuration), and writing [custom rules](/docs/rules).
          icon: documentation-2.png
          buttonText: Falco Documentation
          buttonLink: /docs
        - title: Connect
          text: Join our Slack team to interact with other users and developers.
          icon: chat.png
          buttonText: Falco Slack
          buttonLink: https://slack.sysdig.com/
      signup:
        title: Join the official CNCF Mailing List.
        subtitle: Sign up here
        buttonText: Join
    menu:
      navbar:
      - name: Why Falco?
        url: "/#whyfalco"
        weight: 2
      - name: Get started
        url: "/#resources"
        weight: 3
      - name: Documentation
        url: "/docs"
        weight: 4
      - name: Blog
        url: "/blog"
        weight: 5

params:
  version: v0.18.0
  githubRepository : falcosecurity/falco
  sha256sum: dc480d202e7ebd3596f3a7aa8cd6e29ed5d4d427f927bd868771d9452d6a97b4
  primaryFont:
    name: "Karla"
    sizes: [400 700]
  secondaryFont:
    name: "MaaxMono"    
  hero:
    # Where the main hero button links to
    buttonlink: "#download"
    # Hero image (from /images/___)
    image: illustrations/falco-hero-1.png
    # Footer logos (from /images/logos/clients/___.svg)
    clientlogos:
    - src: kubernetes.svg
      alt: Kubernetes
    - src: docker.svg
      alt: Docker
    - src: red-hat-openshift-logo-grayscale.svg
      alt: Red Hat Openshift
    - src: cri-o-logo-grayscale.svg
      alt: CRI-O
    - src: helm.svg
      alt: Helm
    - src: fluentd.svg
      alt: Fluentd
    - src: kubeless.svg
      alt: Kubeless
    - src: slack.svg
      alt: Slack
    - src: splunk-logo-grayscale.svg
      alt: Splunk
    - src: pagerduty-logo-grayscale.svg
      alt: PagerDuty

  # Customizable navbar. For a dropdown, add a "sublinks" list.
  navbar:
    cncf:
      logo: cncf-black.svg
      cncfLink: https://cncf.io/
      level: Incubating
      levelLink: https://github.com/cncf/toc/blob/master/process/graduation_criteria.adoc
