baseURL: /
languageCode: en-us
theme: docsy
disableKinds: ["taxonomy", "taxonomyTerm"]
pygmentsCodefences: true
pygmentsStyle: monokai
defaultContentLanguage: en
enableInlineShortcodes: true
enableGitInfo: true
enableMissingTranslationPlaceholders: true
languages:
  en:
    languageName: English
    title: The Falco Project
    contentDir: content/en
    params:
      links:
        user:
          - name: Mailing List
            url: "https://lists.cncf.io/g/cncf-falco-dev"
            icon: fa fa-envelope
            desc: Discussion about Falco development and usage
          - name: Twitter
            url: "https://twitter.com/falco_org"
            icon: fab fa-twitter
            desc: Follow us on Twitter to get the latest news!
        developer:
          - name: GitHub
            url: "https://github.com/falcosecurity/falco"
            icon: fab fa-github
            desc: Development takes place here!
          - name: Slack
            url: "https://slack.k8s.io/"
            icon: fab fa-slack
            desc: Join the \#falco channel in the Kubernetes Slack
      heroText:
        title: The Falco Project
        detail1: Trace system calls in the Linux kernel.
        detail2: Enrich the kernel events with container meta information.
        detail3: Assert the events against security rules.
        detail4: Alert during security incidents.
      runtime:
        title: Why Runtime Security?
        intro: >-
          Securing Kubernetes requires putting controls in place to detect unexpected behavior that could be malicious. Examples include:
        items:
          - example: Exploits of unpatched and new vulnerabilities
          - example: Insecure configurations
          - example: Leaked or weak credentials
          - example: Insider threats
        closing: Even when processes are in place for vulnerability scanning and implementing pod security and network policies, not every risk will be addressed. You still need mechanisms to confirm these security barriers are effective, help configure them, and provide with a last line of defense when they fail.
      whyfalco:
        title: The Falco Project
        subtitle: Cloud-Native runtime security
        tiles:
          - title: Access
            icon: fas fa-terminal
            text: Deep kernel tracing built on the Linux kernel, eBPF, and ptrace. Enrich kernel events with Kubernetes and container metainformation. See everything.
          - title: Assert
            icon: fas fa-search
            text: Describe security rules against your system. Protect against unknown or unwanted behavior. Detect 0 day vulnerabilities, CVEs, anomalies, and threats.
          - title: Action
            icon: fas fa-exclamation-circle
            text: Take action during an security violation. Build powerful response applications on the Falco APIs in the case of malicious behaviour.
      featuredvideo:
        title: Featured video
        subtitle: "Show more videos"
      videos:
        - title: "Falco: runtime security analysis through syscalls"
          youtubeVideoID: "8o804koab2g"
        - title: "Keynote: Open Source Intrusion Detection for Containers at Shopify"
          youtubeVideoID: "6pVci31Mb6Q"
        - title: Designing a gRPC Interface for Kernel Tracing with eBPF
          youtubeVideoID: "kjOJfNDPVSo"
        - title: "Intro to Falco: Intrusion Detection for Containers"
          youtubeVideoID: "rBqBrYESryY"
        - title: Cloud Native Runtime Security with Falco
          youtubeVideoID: "Z4POV5IXnHQ"
        - title: "Deep dive: Falco"
          youtubeVideoID: "v9wYiGHwVrg"
        - title: Intro to Falco
          youtubeVideoID: "zgRFN3o7nJE"
      syscalls:
        title: System calls deliver deep visibility
        summary: Falco efficiently leverages Extended Berkeley Packet Filter (eBPF), a secure mechanism, to capture system calls and gain deep visibility. By adding Kubernetes application context and Kubernetes API audit events, teams can understand who did what.
      resources:
        title: Develop
        subtitle: Build secure applications with Falco at the core.
        detail: Use Falco with Kubernetes, Linux, and Serverless applications.
        items:
          - title: Install
            text: Set up Falco to begin development
            icon: fas fa-server
            buttonText1: On Linux
            buttonLink1: https://falco.org/docs/getting-started/installation/#installing
            buttonText2: In Kubernetes
            buttonLink2: https://falco.org/docs/getting-started/third-party/
            buttonText3: Container Images
            buttonLink3: https://falco.org/docs/getting-started/download/#images
            buttonText4: Integrations
            buttonLink4: https://falco.org/docs/getting-started/third-party/
          - title: Build
            text: Falco leverages gRPC and supports several SDKs to build with Falco
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-code
            buttonText1: Go
            buttonLink1: https://github.com/falcosecurity/client-go
            buttonText2: Rust
            buttonLink2: https://github.com/falcosecurity/client-rs
            buttonText3: C++
            buttonLink3: https://github.com/falcosecurity/falco
            buttonText4: Python
            buttonLink4: https://github.com/falcosecurity/client-py
          - title: Configure
            text: Configure Falco using rules, alerts, and other options
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-alt
            buttonText1: Configuration
            buttonLink1: http://falco.org/docs/configuration/
            buttonText2: Rules
            buttonLink2: https://falco.org/docs/rules/
            buttonText3: Alerts
            buttonLink3: https://falco.org/docs/alerts/
            buttonText4: Examples
            buttonLink4: https://falco.org/docs/examples/
      signup:
        title: Join the community
        subtitle: Sign up for the development mailing list
        buttonText: Submit
        slackText: Falco Slack Channels
        slackLink: https://slack.k8s.io/
        mailingListText: Developer Mailing List
        mailingListLink: https://lists.cncf.io/g/cncf-falco-dev
        communityText: GitHub Community
        communityLink: https://github.com/falcosecurity/community
        privacyText: The Falco Community is bound to The Linux Foundation privacy policy. When you communicate with us (via email, phone, through the Sites or otherwise), we may maintain a record of your communication.
        privacyLink: https://www.linuxfoundation.org/privacy/
    menu:
      navbar:
        - name: Documentation
          url: "/docs"
          weight: 4
        - name: Blog
          url: "/blog"
          weight: 5

  zh:
    languageName: 中文 Chinese
    title: Falco — 云原生运行时安全
    contentDir: content/zh
    params:
      heroText:
        # Main hero title
        title: 云原生运行时安全
        # Hero subtitle (optional)
        subtitle: Falco，开源的云原生运行时安全项目，是Kubernetes威胁监测引擎的事实标准。Falco可以监测意外的应用行为和运行时发出的威胁警告。
        # Button text
        buttontext: 从这开始
        # Falco joins CNCF
        falcoCNCF: Falco是第一个加入云原生计算基金会CNCF并处于孵化阶段的运行时安全项目。
      runtime:
        title: 为什么需要运行时安全？
        intro: >-
          保障Kubernetes运行安全需要将控制器放置在适当的位置，以检测可能是恶意的意外行为。例子包括：
        items:
          - example: 利用未修补的新漏洞
          - example: 不安全的配置
          - example: 被泄露的凭证或弱凭证
          - example: 内部威胁
        closing: 即使已存在用于漏洞扫描、配置pod安全和网络策略的程序，也不能解决所有风险。您仍然需要一些机制，以确认这些安全屏障是有效的，帮助配置它们，并在它们失败时提供最后一道防线。
      whyfalco:
        title: 为什么Falco是为了运行时监测？
        subtitle:
        tiles:
          - title: 加强安全性
            icon: check.png
            text: 创建由上下文丰富且灵活的引擎驱动的安全规则，以定义意外的应用程序行为。
          - title: 减小风险
            icon: box.png
            text: 通过将Falco对接您当前的安全响应工作流和流程，立即作出策略违反警报。
          - title: 利用最新的规则
            icon: scalable.png
            text: 使用来源于社区的恶意活动和CVE漏洞监测发出警报。
      featuredvideo:
        title: 精选视频
        subtitle: "显示更多影片"
      videos:
        - title: "Falco: runtime security analysis through syscalls"
          youtubeVideoID: "8o804koab2g"
        - title: "Keynote: Open Source Intrusion Detection for Containers at Shopify"
          youtubeVideoID: "6pVci31Mb6Q"
        - title: Designing a gRPC Interface for Kernel Tracing with eBPF
          youtubeVideoID: "kjOJfNDPVSo"
        - title: "Intro to Falco: Intrusion Detection for Containers"
          youtubeVideoID: "rBqBrYESryY"
        - title: Cloud Native Runtime Security with Falco
          youtubeVideoID: "Z4POV5IXnHQ"
        - title: "Deep dive: Falco"
          youtubeVideoID: "v9wYiGHwVrg"
        - title: Intro to Falco
          youtubeVideoID: "zgRFN3o7nJE"
      syscalls:
        title: 系统调用提供深入的可见性
        summary: Falco有效地利用Extended Berkeley Packet Filter (eBPF)，这一安全机制，来捕获系统调用并获得深入的可见性。通过添加Kubernetes应用程序上下文和Kubernetes API审计事件，团队可以了解谁做了什么。
      resources:
        title: 下载+资源
        subtitle: 从今天开始，为开源项目作出贡献并学习更多。
        items:
          - title: Install
            text: Set up Falco to begin development
            icon: fas fa-server
            buttonText1: On Linux
            buttonLink1: https://falco.org/docs/installation/#installing
            buttonText2: In Kubernetes
            buttonLink2: https://falco.org/docs/third-party/
            buttonText3: Container Images
            buttonLink3: https://falco.org/docs/download/#images
            buttonText4: Integrations
            buttonLink4: https://falco.org/docs/third-party/
          - title: Build
            text: Falco leverages gRPC and supports several SDKs to build with Falco
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-code
            buttonText1: Go
            buttonLink1: https://github.com/falcosecurity/client-go
            buttonText2: Rust
            buttonLink2: https://github.com/falcosecurity/client-rs
            buttonText3: C++
            buttonLink3: https://github.com/falcosecurity/falco
            buttonText4: Python
            buttonLink4: https://github.com/falcosecurity/client-py
          - title: Configure
            text: Falco leverages gRPC and supports several SDKs to build with Falco
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-alt
            buttonText1: Configuration
            buttonLink1: http://falco.org/docs/configuration/
            buttonText2: Rules
            buttonLink2: https://falco.org/docs/rules/
            buttonText3: Alerts
            buttonLink3: https://falco.org/docs/alerts/
            buttonText4: Examples
            buttonLink4: https://falco.org/docs/examples/
      signup:
        title: Join the community
        subtitle: Sign up for the development mailing list
        buttonText: Submit
        slackText: Falco Slack Channels
        slackLink: https://slack.k8s.io/
        mailingListText: Developer Mailing List
        mailingListLink: https://lists.cncf.io/g/cncf-falco-dev
        communityText: GitHub Community
        communityLink: https://github.com/falcosecurity/community
        privacyText: The Falco Community is bound to The Linux Foundation privacy policy. When you communicate with us (via email, phone, through the Sites or otherwise), we may maintain a record of your communication.
        privacyLink: https://www.linuxfoundation.org/privacy/
    menu:
      navbar:
        - name: 为什么需要Falco？
          url: "/#whyfalco"
          weight: 2
        - name: 从这开始
          url: "/#resources"
          weight: 3
        - name: 文档
          url: "/docs"
          weight: 4
      #- name: 博客
      #  url: "/blog"
      #  weight: 5

  jp:
    languageName: 日本語 Japanese
    title: The Falco Project
    contentDir: content/jp
    params:
      heroText:
        title: The Falco Project
        detail1: Linuxカーネルのシステムコールをトレースします。
        detail2: コンテナメタ情報を使用してカーネルイベントを強化します。
        detail3: セキュリティルールに対してイベントをアサートします。
        detail4: セキュリティインシデントにおけるアラート。
      runtime:
        title: なぜランタイムセキュリティなのか？
        intro: >-
          Kubernetesを保護するには、悪意のある可能性のある予期しないビヘイビアを検出するためのコントロールの仕組みが必要です。例えば以下の場合です：
        items:
          - example: パッチ未適用および新しい脆弱性のエクスプロイト
          - example: セキュアでない設定
          - example: 漏洩または弱いクレデンシャル
          - example: インサイダー脅威
        closing: 脆弱性スキャンおよびポッドセキュリティとネットワークポリシーを実装するためのプロセスが整っている場合でも、すべてのリスクに対処できるわけではありません。これらのセキュリティバリアが効果的であることを確認し、設定を支援し、障害が発生した場合に最後の防御線を提供するメカニズムが必要です。
      whyfalco:
        title: The Falco Project
        subtitle: クラウドネイティブランタイムセキュリティ
        tiles:
          - title: アクセス
            icon: fas fa-terminal
            text: Linuxカーネル、eBPF、およびptraceに基づいて構築された詳細なカーネルトレース。 Kubernetesとコンテナメタ情報を使用してカーネルイベントを強化します。すべて見えます。
          - title: アサート
            icon: fas fa-search
            text: システムに対するセキュリティルールを記述します。未知または不要な動作から保護します。 ゼロデイ脆弱性、CVE、異常、脅威を検出します。
          - title: アクション
            icon: fas fa-exclamation-circle
            text: セキュリティ違反時にアクションを実行します。悪意のある振る舞いが発生した場合に、Falco APIでパワフルなレスポンスアプリケーションを構築します。
      featuredvideo:
        title: 注目のビデオ
        subtitle: "他の動画を表示"
      videos:
        - title: "Falco: runtime security analysis through syscalls"
          youtubeVideoID: "8o804koab2g"
        - title: "Keynote: Open Source Intrusion Detection for Containers at Shopify"
          youtubeVideoID: "6pVci31Mb6Q"
        - title: Designing a gRPC Interface for Kernel Tracing with eBPF
          youtubeVideoID: "kjOJfNDPVSo"
        - title: "Intro to Falco: Intrusion Detection for Containers"
          youtubeVideoID: "rBqBrYESryY"
        - title: Cloud Native Runtime Security with Falco
          youtubeVideoID: "Z4POV5IXnHQ"
        - title: "Deep dive: Falco"
          youtubeVideoID: "v9wYiGHwVrg"
        - title: Intro to Falco
          youtubeVideoID: "zgRFN3o7nJE"
      syscalls:
        title: システムコールがディープな可視性をもたらす
        summary: Falcoは、セキュアな仕組みであるExtended Berkeley Packet Filter（eBPF）を効率的に活用して、システムコールをキャプチャし、ディープな可視性を獲得します。KubernetesアプリケーションコンテキストとKubernetes API auditイベントを追加することにより、チームは誰が何をしたかを理解できます。
      resources:
        title: デベロップ
        subtitle: Falcoをコアにして安全なアプリケーションを構築しましょう。
        detail: FalcoはKubernetes、Linux、Serverlessアプリケーションで使用できます。
        items:
          - title: インストール
            text: Falcoをセットアップして開発を開始する
            icon: fas fa-server
            buttonText1: Linux上で
            buttonLink1: https://falco.org/jp/docs/installation/#installing
            buttonText2: Kubernetes上で
            buttonLink2: https://falco.org/jp/docs/third-party/
            buttonText3: コンテナイメージ
            buttonLink3: https://falco.org/jp/docs/download/#images
            buttonText4: 統合
            buttonLink4: https://falco.org/jp/docs/third-party/
          - title: ビルド
            text: FalcoはgRPCを活用し、FalcoでビルドするいくつかのSDKをサポートしています
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-code
            buttonText1: Go
            buttonLink1: https://github.com/falcosecurity/client-go
            buttonText2: Rust
            buttonLink2: https://github.com/falcosecurity/client-rs
            buttonText3: C++
            buttonLink3: https://github.com/falcosecurity/falco
            buttonText4: Python
            buttonLink4: https://github.com/falcosecurity/client-py
          - title: 設定
            text: FalcoはgRPCを活用し、FalcoでビルドするいくつかのSDKをサポートしています
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-alt
            buttonText1: 設定
            buttonLink1: http://falco.org/jp/docs/configuration/
            buttonText2: ルール
            buttonLink2: https://falco.org/jp/docs/rules/
            buttonText3: アラート
            buttonLink3: https://falco.org/jp/docs/alerts/
            buttonText4: 例
            buttonLink4: https://falco.org/jp/docs/examples/
      signup:
        title: コミュニティへ参加
        subtitle: 開発メーリングリストにサインアップする
        buttonText: サブミット
        slackText: Falco Slack チャンネル
        slackLink: https://slack.k8s.io/
        mailingListText: デベロッパーメーリングリスト
        mailingListLink: https://lists.cncf.io/g/cncf-falco-dev
        communityText: GitHub コミュニティ
        communityLink: https://github.com/falcosecurity/community
        privacyText: The Falco Community is bound to The Linux Foundation privacy policy. When you communicate with us (via email, phone, through the Sites or otherwise), we may maintain a record of your communication.
        privacyLink: https://www.linuxfoundation.org/privacy/
    menu:
      navbar:
<<<<<<< HEAD
      - name: ドキュメンテーション
        url: "/docs"
        weight: 4
      - name: ブログ
        url: "/blog"
        weight: 5
=======
        - name: Falcoを選ぶ理由
          url: "/#whyfalco"
          weight: 2
        - name: 始めましょう
          url: "/#resources"
          weight: 3
        - name: ドキュメンテーション
          url: "/docs"
          weight: 4
      #- name: ブログ
      #  url: "/blog"
      #  weight: 5
>>>>>>> 7f932fa (update: badges in the footer)

  ko:
    languageName: 한국어 Korean
    title: The Falco Project
    contentDir: content/ko
    params:
      heroText:
        title: The Falco Project
        detail1: 리눅스 커널 시스템 호출을 추적합니다.
        detail2: 컨테이너 메타 정보로 커널 이벤트를 보완합니다.
        detail3: 보안 규칙에 대한 이벤트를 지정합니다.
        detail4: 보안 사고 발생 시 알림을 지원합니다.
      runtime:
        title: 왜 런타임 보안인가?
        intro: >-
          쿠버네티스 보안을 위해 악의적인 예상치 못한 동작을 탐지 할 수 있도록 제어해야 합니다. 예제:
        items:
          - example: 패치전(unpatched) 및 신규 취약점 공격
          - example: 보안에 취약한 설정
          - example: 노출되었거나 약한 자격 증명(credentials)
          - example: 내부 위협
        closing: 취약점 스캔, 파드 보안 및 네트워크 정책 구현에 대한 프로세스가 있더라도 모든 위협에서 자유롭지는 않습니다. 해당 보안 장벽의 효과를 확인하는 메커니즘 및 설정 방안, 그리고 이 방안들이 실패했을 경우 최후의 방어 수단을 가지고 있어야 합니다.
      whyfalco:
        title: The Falco Project
        subtitle: 클라우드 네이티브 런타임 보안
        tiles:
          - title: Access
            icon: fas fa-terminal
            text: 리눅스 커널, eBPF, ptrace를 이용해 심층적으로 커널을 추적합니다. 쿠버네티스와 컨테이너 메타 정보를 이용해 커널 이벤트를 보완합니다. 모든 것을 볼 수 있습니다.
          - title: Assert
            icon: fas fa-search
            text: 시스템에 대한 보안 규칙을 작성합니다. 알 수 없거나 원하지 않는 동작으로부터 시스템을 보호합니다. 제로 데이 취약점, CVE, 이상 및 위협을 탐지합니다.
          - title: Action
            icon: fas fa-exclamation-circle
            text: 보안 위반 시 조치를 취합니다. Falco API를 이용해 악의적인 행동에 대해 강력한 대응 애플리케이션을 구축합니다.
      featuredvideo:
        title: 인기 있는 영상
        subtitle: "더 많은 영상 보기"
      videos:
        - title: "Falco: runtime security analysis through syscalls"
          youtubeVideoID: "8o804koab2g"
        - title: "Keynote: Open Source Intrusion Detection for Containers at Shopify"
          youtubeVideoID: "6pVci31Mb6Q"
        - title: Designing a gRPC Interface for Kernel Tracing with eBPF
          youtubeVideoID: "kjOJfNDPVSo"
        - title: "Intro to Falco: Intrusion Detection for Containers"
          youtubeVideoID: "rBqBrYESryY"
        - title: Cloud Native Runtime Security with Falco
          youtubeVideoID: "Z4POV5IXnHQ"
        - title: "Deep dive: Falco"
          youtubeVideoID: "v9wYiGHwVrg"
        - title: Intro to Falco
          youtubeVideoID: "zgRFN3o7nJE"
      syscalls:
        title: 시스템 콜(System calls)을 활용한 확장된 가시성
        summary: Falco는 보안 메커니즘인 Extended Berkeley Packet Filter (eBPF)를 효율적으로 사용하여 시스템 콜(system call)을 캡처하여 더 많은 가시성을 제공합니다. 쿠버네티스 애플리케이션 컨텍스트와 쿠버네티스 API 감사(audit) 이벤트를 추가하여 팀은 어떤 사용자가 어떤 행위를 했는지 파악할 수 있습니다.
      resources:
        title: 개발하기
        subtitle: Falco를 중심으로 안전한 애플리케이션을 구축합니다.
        detail: Falco는 쿠버네티스, 리눅스, 서버리스 애플리케이션에서 사용할 수 있습니다.
        items:
          - title: 설치
            text: Falco를 설정하고 개발을 시작합니다.
            icon: fas fa-server
            buttonText1: 리눅스
            buttonLink1: https://falco.org/ko/docs/installation/#installing
            buttonText2: 쿠버네티스
            buttonLink2: https://falco.org/ko/docs/third-party/
            buttonText3: 컨테이너 이미지
            buttonLink3: https://falco.org/ko/docs/download/#images
            buttonText4: 통합
            buttonLink4: https://falco.org/ko/docs/third-party/
          - title: 빌드
            text: Falco는 gRPC를 활용해 Falco를 빌드하는 여러 SDK를 지원합니다.
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-code
            buttonText1: Go
            buttonLink1: https://github.com/falcosecurity/client-go
            buttonText2: Rust
            buttonLink2: https://github.com/falcosecurity/client-rs
            buttonText3: C++
            buttonLink3: https://github.com/falcosecurity/falco
            buttonText4: Python
            buttonLink4: https://github.com/falcosecurity/client-py
          - title: 설정
            text: Falco는 gRPC를 활용해 Falco를 빌드하는 여러 SDK를 지원합니다.
            # Icon (from /images/illustrations/icons/___.svg)
            icon: fas fa-file-alt
            buttonText1: 설정
            buttonLink1: https://falco.org/ko/docs/configuration/
            buttonText2: 규칙
            buttonLink2: https://falco.org/ko/docs/rules/
            buttonText3: 알림
            buttonLink3: https://falco.org/ko/docs/alerts/
            buttonText4: 예제
            buttonLink4: https://falco.org/ko/docs/examples/
      signup:
        title: 커뮤니티 활동에 참여하기
        subtitle: 메일링 리스트 가입하기
        buttonText: 제출하기
        slackText: Falco 슬랙 채널
        slackLink: https://slack.k8s.io/
        mailingListText: 개발자 메일링 리스트
        mailingListLink: https://lists.cncf.io/g/cncf-falco-dev
        communityText: 깃헙(GitHub) 커뮤니티
        communityLink: https://github.com/falcosecurity/community
        privacyText: The Falco Community is bound to The Linux Foundation privacy policy. When you communicate with us (via email, phone, through the Sites or otherwise), we may maintain a record of your communication.
        privacyLink: https://www.linuxfoundation.org/privacy/
    menu:
      navbar:
        - name: 문서
          url: "/docs"
          weight: 4
        # - name: 블로그
        #   url: "/blog"
        #   weight: 5

params:
  version: v0.26.2

  # githubRepository: falcosecurity/falco
  sha256sum: 21e8053c37e32f95d91c9393d961af1c63b5839d795c8cac314d05daadea9779
  offlineSearch: true

  github_repo: "https://github.com/falcosecurity/falco-website"
  github_project_repo: "https://github.com/falcosecurity/falco"
  ui:
    navbar_logo: true
    sidebar_search_disable: false
    sidebar_menu_compact: false
    breadcrumb_disable: false
    feedback:
      enable: true
      "yes": >-
        Glad to hear it! Please <a
        href="https://github.com/falcosecurity/falco-website/issues/new">tell us how we
        can improve</a>.
      "no": >-
        Sorry to hear that. Please <a
        href="https://github.com/falcosecurity/falco-website/issues/new">tell us how we
        can improve</a>.

  hero:
    buttonlink: "#resources"
    image: illustrations/dark-terminal.jpg

    created-by:
      - src: sysdig.png
        alt: Sysdig
        url: https://www.sysdig.com/

    # ------------------------------------------------------------------------------------------------------------------
    #
    # [ END-USERS ]
    #
    end-users:
      - src: bah.png
        alt: Booz Allen Hamilton
        url: https://www.boozallen.com/
      - src: coveo.png
        alt: Coveo
        url: https://www.coveo.com/en
      - src: frameio.png
        alt: Frame.io
        url: https://frame.io/
      - src: gitlab.png
        alt: GitLab
        url: https://https://about.gitlab.com/
      - src: league.png
        alt: League
        url: https://league.com/us/
      - src: preferral.png
        alt: Preferral
        url: https://www.preferral.com/
      - src: shopify.png
        alt: Shopify
        url: https://shopify.com
      - src: sightmachine.png
        alt: Sight Machine
        url: https://sightmachine.com/
      - src: skyscanner.png
        alt: Sky Scanner
        url: https://medium.com/@SkyscannerEng/kubernetes-security-monitoring-at-scale-with-sysdig-falco-a60cfdb0f67a

    # ------------------------------------------------------------------------------------------------------------------
    #
    # [ VENDORS ]
    #
    vendors:
      - src: logzio.png
        alt: Logz.io
        url: https://logz.io/
      - src: rancher.png
        alt: Rancher
        url: https://rancher.com
      - src: shujinko.png
        alt: Shujinko
        url: https://www.shujinko.io/products/
      - src: sumologic.png
        alt: Sumo Logic
        url: https://www.sumologic.com/
      - src: sysdig.png
        alt: Sysdig
        url: https://sysdig.com

    # ------------------------------------------------------------------------------------------------------------------
    #
    # [ Integrations ]
    #
    integrations:
      # -------------------------------------------------
      # CNCF Projects
      #
      - src: helm.png
        alt: Helm
        url: https://helm.sh
      - src: kubernetes.png
        alt: Kubernetes
        url: https://kubernetes.io
      - src: opa.png
        alt: Open Policy Agent1
        url: https://www.openpolicyagent.org/
      - src: prometheus.png
        alt: Prometheus
        url: https://prometheus.io/

        # -------------------------------------------------
        # Third Party Integrations
        #
      - src: aws.png
        alt: Amazon Web Services
        url: https://aws.amazon.com/
      - src: azure.png
        alt: Azure
        url: https://azure.microsoft.com
      - src: datadog.png
        alt: Datadog
        url: https://www.datadoghq.com/
      - src: elasticsearch.png
        alt: Elastic Search
        url: https://www.elastic.co/elasticsearch
      - src: google.png
        alt: Google Cloud
        url: https://cloud.google.com/
      - src: ibmcloud.png
        alt: IBM Cloud
        url: https://www.ibm.com/cloud
      - src: influx.png
        alt: InfluxDB
        url: https://www.influxdata.com/
      - src: loki.png
        alt: Grafana Loki
        url: https://grafana.com/oss/loki/
      - src: opsgenie.png
        alt: Opsgenie
        url: https://www.atlassian.com/software/opsgenie
      - src: redhat.png
        alt: Red Hat
        url: https://www.redhat.com
      - src: slack.png
        alt: Slack
        url: https://slack.com/
      - src: statsd.png
        alt: StatsD
        url: https://github.com/statsd/statsd

    # ------------------------------------------------------------------------------------------------------------------

  # Customizable navbar. For a dropdown, add a "sublinks" list.
  navbar:
    cncf:
      logo: cncf-black.svg
      cncfLink: https://cncf.io/
      level: Incubating
      levelLink: https://github.com/cncf/toc/blob/master/process/graduation_criteria.adoc
